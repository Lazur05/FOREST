var nameInput=document.querySelector("#name"),mailInput=document.querySelector("#email"),messageInput=document.querySelector("#message"),sendBtn=document.querySelector(".contact__form-button"),popup=document.querySelector(".contact__popup"),closePopupBtn=document.querySelector(".contact__popup-close"),showError=function(e,t){var o=e.parentElement,r=o.querySelector(".contact__form-error"),o=o.querySelector(".contact__form-label");r.textContent=t,e.classList.add("error"),o.classList.add("error")},clearError=function(e){var t=e.parentElement,o=t.querySelector(".contact__form-error"),t=t.querySelector(".contact__form-label");o.textContent="",e.classList.remove("error"),t.classList.remove("error")},checkForm=function(e){e.forEach(function(e){""===e.value?showError(e,"To pole jest wymagane!"):clearError(e)})},checkLength=function(e,t){e.value.length<t&&showError(e,"To pole musi zawierać minimum ".concat(t," znaków!"))},checkEmail=function(e){/^(([^<>()[\]\.,;:\s@\"]+(\.[^<>()[\]\.,;:\s@\"]+)*)|(\".+\"))@(([^<>()[\]\.,;:\s@\"]+\.)+[^<>()[\]\.,;:\s@\"]{2,})$/i.test(e.value)?clearError(e):showError(e,"Podaj poprawny adres email!")},checkErrors=function(){var e=document.querySelectorAll(".contact__form-input"),t=0;e.forEach(function(e){e.classList.contains("error")&&t++}),0===t&&popup.classList.add("contact__popup--show")};[nameInput,mailInput,messageInput].forEach(function(e){e.addEventListener("focusout",function(e){checkForm([e.target])})}),sendBtn.addEventListener("click",function(e){e.preventDefault(),checkForm([nameInput,mailInput,messageInput]),checkLength(nameInput,3),checkLength(messageInput,15),checkEmail(mailInput),checkErrors()}),closePopupBtn.addEventListener("click",function(){popup.classList.remove("contact__popup--show")});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZvcm0uanMiXSwibmFtZXMiOlsibmFtZUlucHV0IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwibWFpbElucHV0IiwibWVzc2FnZUlucHV0Iiwic2VuZEJ0biIsImxhYmVsIiwiZm9ybWJveCIsImVycm9yTXNnIiwidGV4dENvbnRlbnQiLCJtc2ciLCJjbGFzc0xpc3QiLCJhZGQiLCJjbGVhckVycm9yIiwiaW5wdXQiLCJwYXJlbnRFbGVtZW50IiwicmVtb3ZlIiwiY2hlY2tGb3JtIiwiZm9yRWFjaCIsImVsIiwidmFsdWUiLCJzaG93RXJyb3IiLCJsZW5ndGgiLCJyZWciLCJtaW4iLCJjb25jYXQiLCJjaGVja0Vycm9ycyIsImVtYWlsIiwiZXJyb3JDb3VudCIsImFsbElucHV0cyIsInBvcHVwIiwicXVlcnlTZWxlY3RvckFsbCIsImFkZEV2ZW50TGlzdGVuZXIiLCJlIiwiY29udGFpbnMiLCJjaGVja0xlbmd0aCIsInRhcmdldCIsInByZXZlbnREZWZhdWx0IiwiY2hlY2tFbWFpbCIsImNsb3NlUG9wdXBCdG4iXSwibWFwcGluZ3MiOiJBQUFBLElBQU1BLFVBQVlDLFNBQVNDLGNBQWMsT0FBTyxFQUMxQ0MsVUFBWUYsU0FBU0MsY0FBYyxRQUFRLEVBRDNDRixhQUFZQyxTQUFTQyxjQUFjLFVBQVEsRUFDM0NDLFFBQVlGLFNBQVNDLGNBQWMsdUJBQVMsRUFDNUNFLE1BQUFBLFNBQWVILGNBQVNDLGlCQUF5QixFQUNqREcsY0FBa0JKLFNBQUNDLGNBQWMsdUJBQXdCLEVBV3JESSxVQUFRQyxTQUFBQSxFQUFRTCxHQUN0Qk0sSUFBUUQsRUFBQ0UsRUFBY0MsY0FDakJDLEVBQWFKLEVBQVFMLGNBQUMsc0JBQUEsRUFDdEJTLEVBQVVDLEVBQUlWLGNBQVEsc0JBQUEsRUFDL0JNLEVBQUFDLFlBQUFDLEVBRUtHLEVBQUFBLFVBQWFELElBQUEsT0FBYkMsRUFDRlAsRUFBTUMsVUFBVU8sSUFBTUMsT0FBQUEsQ0FIMUIsRUFNSVAsV0FBU0MsU0FBQUEsR0FDVEssSUFBTUgsRUFBVUssRUFBT0QsY0FDakJKLEVBQVVLLEVBQU9kLGNBQVEsc0JBQUEsRUFDbENJLEVBQUFDLEVBQUFMLGNBQUEsc0JBQUEsRUFFS2UsRUFBU1IsWUFBVFEsR0FDRkgsRUFBTUksVUFBUUYsT0FBQUcsT0FBTSxFQUNoQmIsRUFBTUssVUFBTUssT0FBUyxPQUFBLENBSjdCLEVBT1lILFVBQVdNLFNBQUFBLEdBQ2ZMLEVBQUFJLFFBQUEsU0FBQUMsR0FDRixLQUFBQSxFQUFBQyxNQUNMQyxVQUFBRixFQUFBLHdCQUFBLEVBSWFDLFdBQU1FLENBQU0sQ0FFdEIsQ0FBQSxDQUNKLEVBSVFDLFlBQWMsU0FBQ0gsRUFBTUksR0FDckJYLEVBQVVPLE1BQU1FLE9BQUNFLEdBQ3BCSCxVQUFNUCxFQUFBLGlDQUFBVyxPQUFBRCxFQUFBLFVBQUEsQ0FBQSxDQU5YLEVBV01FLFdBQWMsU0FBQUMsR0FFRCx1SEFDWEMsS0FBVUQsRUFBSVAsS0FBQSxFQUNsQlMsV0FBaUJGLENBQUMsRUFFVkMsVUFBWUQsRUFBQSw2QkFBQSxDQVJ4QixFQWFRRyxZQUFnQmxCLFdBRXZCLElBQUFpQixFQUFBNUIsU0FBQThCLGlCQUFBLHNCQUFBLEVBSUEvQixFQUFvQixFQUNmNkIsRUFBQ0csUUFBaUIsU0FBQWIsR0FDaEJGLEVBQVdnQixVQUFVQyxTQUFBLE9BQUEsR0FDdkJOLENBQUEsRUFJTnZCLENBQUFBLEVBR3dCLElBQXBCWSxHQUNBa0IsTUFBWW5DLFVBQVNZLElBQUksc0JBQUEsQ0FmN0IsRUFJQSxDQUFDWixVQWtCU1csVUFBVUssY0FBT0UsUUFBQSxTQUFBQyxHQUN6QkEsRUFBQWEsaUJBQUEsV0FBQSxTQUFBQyxHQWpCTWhCLFVBQVUsQ0FBQ2dCLEVBQUVHLE9BQU8sQ0FDeEIsQ0FBQyxDQUNMLENBQUMsRUFHRC9CLFFBQVEyQixpQkFBaUIsUUFBUyxTQUFDQyxHQUMvQkEsRUFBRUksZUFBZSxFQUVqQnBCLFVBQVUsQ0FBQ2pCLFVBQVdHLFVBQVdDLGFBQWEsRUFDOUMrQixZQUFZbkMsVUFBVyxDQUFDLEVBQ3hCbUMsWUFBWS9CLGFBQWMsRUFBRSxFQUM1QmtDLFdBQVduQyxTQUFTLEVBQ3BCdUIsWUFBWSxDQUNoQixDQUFDLEVBRURhLGNBQWNQLGlCQUFpQixRQUFTLFdBQ3BDRixNQUFNbkIsVUFBVUssT0FBTyxzQkFBc0IsQ0FDakQsQ0FBQyIsImZpbGUiOiJmb3JtLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG5hbWVJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNuYW1lJylcclxuY29uc3QgbWFpbElucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2VtYWlsJylcclxuY29uc3QgbWVzc2FnZUlucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI21lc3NhZ2UnKVxyXG5jb25zdCBzZW5kQnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNvbnRhY3RfX2Zvcm0tYnV0dG9uJylcclxuY29uc3QgcG9wdXAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY29udGFjdF9fcG9wdXAnKVxyXG5jb25zdCBjbG9zZVBvcHVwQnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNvbnRhY3RfX3BvcHVwLWNsb3NlJylcclxuXHJcblxyXG5cclxuXHJcblxyXG5jb25zdCBzaG93RXJyb3IgPSAoaW5wdXQsIG1zZykgPT4ge1xyXG4gICAgY29uc3QgZm9ybWJveCA9IGlucHV0LnBhcmVudEVsZW1lbnRcclxuICAgIGNvbnN0IGVycm9yTXNnID0gZm9ybWJveC5xdWVyeVNlbGVjdG9yKCcuY29udGFjdF9fZm9ybS1lcnJvcicpXHJcbiAgICBjb25zdCBsYWJlbCA9IGZvcm1ib3gucXVlcnlTZWxlY3RvcignLmNvbnRhY3RfX2Zvcm0tbGFiZWwnKVxyXG4gICAgZXJyb3JNc2cudGV4dENvbnRlbnQgPSBtc2dcclxuICAgIGlucHV0LmNsYXNzTGlzdC5hZGQoJ2Vycm9yJylcclxuICAgIGxhYmVsLmNsYXNzTGlzdC5hZGQoJ2Vycm9yJylcclxufVxyXG5cclxuY29uc3QgY2xlYXJFcnJvciA9IGlucHV0ID0+IHtcclxuICAgIGNvbnN0IGZvcm1ib3ggPSBpbnB1dC5wYXJlbnRFbGVtZW50XHJcbiAgICBjb25zdCBlcnJvck1zZyA9IGZvcm1ib3gucXVlcnlTZWxlY3RvcignLmNvbnRhY3RfX2Zvcm0tZXJyb3InKVxyXG4gICAgY29uc3QgbGFiZWwgPSBmb3JtYm94LnF1ZXJ5U2VsZWN0b3IoJy5jb250YWN0X19mb3JtLWxhYmVsJylcclxuICAgIGVycm9yTXNnLnRleHRDb250ZW50ID0gJydcclxuICAgIGlucHV0LmNsYXNzTGlzdC5yZW1vdmUoJ2Vycm9yJylcclxuICAgIGxhYmVsLmNsYXNzTGlzdC5yZW1vdmUoJ2Vycm9yJylcclxufVxyXG5cclxuY29uc3QgY2hlY2tGb3JtID0gaW5wdXQgPT4ge1xyXG4gICAgaW5wdXQuZm9yRWFjaChlbCA9PiB7XHJcbiAgICAgICAgaWYgKGVsLnZhbHVlID09PSAnJykge1xyXG4gICAgICAgICAgICBzaG93RXJyb3IoZWwsICdUbyBwb2xlIGplc3Qgd3ltYWdhbmUhJylcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBjbGVhckVycm9yKGVsKVxyXG4gICAgICAgIH1cclxuICAgIH0pXHJcbn1cclxuXHJcblxyXG5jb25zdCBjaGVja0xlbmd0aCA9IChpbnB1dCwgbWluKSA9PiB7XHJcbiAgICBpZiAoaW5wdXQudmFsdWUubGVuZ3RoIDwgbWluKSB7XHJcbiAgICAgICAgc2hvd0Vycm9yKGlucHV0LCBgVG8gcG9sZSBtdXNpIHphd2llcmHEhyBtaW5pbXVtICR7bWlufSB6bmFrw7N3IWApXHJcbiAgICB9XHJcbn1cclxuXHJcbmNvbnN0IGNoZWNrRW1haWwgPSBlbWFpbCA9PiB7XHJcbiAgICBjb25zdCByZWcgPSAvXigoW148PigpW1xcXVxcLiw7Olxcc0BcXFwiXSsoXFwuW148PigpW1xcXVxcLiw7Olxcc0BcXFwiXSspKil8KFxcXCIuK1xcXCIpKUAoKFtePD4oKVtcXF1cXC4sOzpcXHNAXFxcIl0rXFwuKStbXjw+KClbXFxdXFwuLDs6XFxzQFxcXCJdezIsfSkkL2k7XHJcbiAgICBpZiAocmVnLnRlc3QoZW1haWwudmFsdWUpKSB7XHJcbiAgICAgICAgY2xlYXJFcnJvcihlbWFpbClcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgc2hvd0Vycm9yKGVtYWlsLCAnUG9kYWogcG9wcmF3bnkgYWRyZXMgZW1haWwhJylcclxuICAgIH1cclxufVxyXG5cclxuY29uc3QgY2hlY2tFcnJvcnMgPSAoKSA9PiB7XHJcblxyXG4gICAgY29uc3QgYWxsSW5wdXRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmNvbnRhY3RfX2Zvcm0taW5wdXQnKVxyXG4gICAgbGV0IGVycm9yQ291bnQgPSAwXHJcbiAgICBhbGxJbnB1dHMuZm9yRWFjaChlbCA9PiB7XHJcbiAgICAgICAgaWYgKGVsLmNsYXNzTGlzdC5jb250YWlucygnZXJyb3InKSkge1xyXG4gICAgICAgICAgICBlcnJvckNvdW50KytcclxuICAgICAgICB9XHJcbiAgICB9KVxyXG5cclxuICAgIGlmIChlcnJvckNvdW50ID09PSAwKXtcclxuICAgICAgICBwb3B1cC5jbGFzc0xpc3QuYWRkKCdjb250YWN0X19wb3B1cC0tc2hvdycpXHJcbiAgICB9XHJcbn1cclxuXHJcblxyXG5cclxuW25hbWVJbnB1dCwgbWFpbElucHV0LCBtZXNzYWdlSW5wdXRdLmZvckVhY2goZWwgPT4ge1xyXG4gICAgZWwuYWRkRXZlbnRMaXN0ZW5lcignZm9jdXNvdXQnLCBlID0+IHtcclxuICAgICAgICBjaGVja0Zvcm0oW2UudGFyZ2V0XSlcclxuICAgIH0pXHJcbn0pXHJcblxyXG5cclxuc2VuZEJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChlKSA9PiB7XHJcbiAgICBlLnByZXZlbnREZWZhdWx0KClcclxuICAgIFxyXG4gICAgY2hlY2tGb3JtKFtuYW1lSW5wdXQsIG1haWxJbnB1dCwgbWVzc2FnZUlucHV0XSlcclxuICAgIGNoZWNrTGVuZ3RoKG5hbWVJbnB1dCwgMylcclxuICAgIGNoZWNrTGVuZ3RoKG1lc3NhZ2VJbnB1dCwgMTUpXHJcbiAgICBjaGVja0VtYWlsKG1haWxJbnB1dClcclxuICAgIGNoZWNrRXJyb3JzKClcclxufSlcclxuXHJcbmNsb3NlUG9wdXBCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgICBwb3B1cC5jbGFzc0xpc3QucmVtb3ZlKCdjb250YWN0X19wb3B1cC0tc2hvdycpXHJcbn0pIl19
